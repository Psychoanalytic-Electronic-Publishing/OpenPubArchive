openapi: 3.0.0
info:
  title: PEP-Web API
  description: |
    API for PEP-Web, provides access to all the current search and retrieval functionality of PEP-Web.  Access to the API is with Psychoanalytic Electronic Publishing's Permission
    [http://pep-web.org/api/](http://pep-web.org/api/).
  termsOfService: http://support.pep-web.org/pep-web-api-terms-and-conditions/
  contact:
    email: support@pep-web.org
  license:
    name: License for the API call details - Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
externalDocs:
  description: PEP-Web API
  url: http://pep-web.org
servers:
- url: http://stage.pep.gvpi.net/api/v1
tags:
- name: Metadata
  description: Get information about the PEP-Web Sources
- name: Authors
  description: Get information about or related to the PEP-Web Authors
- name: Abstracts
  description: Retrieve abstracts for documents (for summary or non-authenticated
    use)
- name: Documents
  description: Retrieve full documents (for authenticated users)
- name: Database
  description: Retrieve document lists matching search criteria
  externalDocs:
    description: Find out more about PEP-Web
    url: http://www.pep-web.org
paths:
  /Metadata/Banners/:
    get:
      tags:
      - Metadata
      summary: Get banners
      description: Returns the graphic banner for all current pep sources
      operationId: getPEPSourceBanners
      responses:
        200:
          description: An imageURL object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        400:
          description: Bad request
  /Metadata/Banners/{pepCode}/:
    get:
      tags:
      - Metadata
      summary: Get banners for one source
      description: Returns the graphic banner for a specific pep source.  If the pepCode
        isn't found, it returns an empty array in responseSet.
      operationId: getPEPSourceBanner
      parameters:
      - name: pepCode
        in: path
        description: PEP code / acronym of source
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          pepCode:
            summary: Example of a pepCode
            value: APA
      responses:
        200:
          description: An imageURL object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        400:
          description: Bad request
  /Metadata/{sourceType}/:
    get:
      tags:
      - Metadata
      summary: Get descriptive information on all sources of a given type
      description: Returns descriptive information all sources of a given type [journals,
        books, videos, or special]
      operationId: getJournalInfo
      parameters:
      - name: sourceType
        in: path
        description: Type of Source
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Journals
          - Books
          - Videos
          - Specials
      responses:
        200:
          description: A sourceInfo object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sourceInfo'
        400:
          description: Bad request
        404:
          description: Error - Information not found
  /Metadata/{sourceType}/{pepCode}/:
    get:
      tags:
      - Metadata
      summary: Get descriptive information on a specific source
      description: Returns descriptive information on a specific source (e.g., ISSN,
        title, language, pub year range ...)
      operationId: getSpecificJournalInfo
      parameters:
      - name: sourceType
        in: path
        description: Type of Source
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - Journals
          - Books
          - Videos
          - Specials
      - name: pepCode
        in: path
        description: PEP code / acronym of source
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          pepCode:
            summary: Example of a pepCode
            value: APA
      responses:
        200:
          description: A sourceInfo object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sourceInfo'
        400:
          description: Bad request
  /Metadata/Volumes/{pepCode}/:
    get:
      tags:
      - Metadata
      summary: Return a list of volumes for a specific source
      description: Return a list of volumes for a specific source via given PEPCode
      operationId: getSourceVolumes
      parameters:
      - name: pepCode
        in: path
        description: PEP code / acronym of source
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          pepCode:
            summary: Example of a pepCode
            value: APA
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: A volumeList object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        400:
          description: Invalid PEP Code
  /Metadata/Contents/{pepCode}/:
    get:
      tags:
      - Metadata
      summary: Return a list of documents for a specific source
      description: Return a list of documents for a source (and optional year specified
        in query params).  The curent implementation does not appear to support the
        limit and offset parameters.
      operationId: getSourceContentsForYear
      parameters:
      - name: pepCode
        in: path
        description: PEP code / acronym of source
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          pepCode:
            summary: Example of a pepCode
            value: APA
      - name: year
        in: query
        description: Volume year
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: A documentList object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        400:
          description: Invalid PEP Code
  /Metadata/Contents/{pepCode}/{pepVol}/:
    get:
      tags:
      - Metadata
      summary: Return a list of documents for a source and volume
      description: Return a list of documents for a source and volume
      operationId: getSourceContents
      parameters:
      - name: pepCode
        in: path
        description: PEP code / acronym of source
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          pepCode:
            summary: Example of a pepCode
            value: APA
      - name: pepVol
        in: path
        description: Vol Num. of source to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: A documentList Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        400:
          description: Invalid PEP Code
  /Metadata/Contents/Books/{bookBaseDocumentID}/:
    get:
      tags:
      - Metadata
      summary: Return a list of documents for a book source
      description: Return a list of documents for a book source using the base of
        the PEP Locator (ID)
      operationId: getBookBaseDocument
      parameters:
      - name: bookBaseDocumentID
        in: path
        description: Part of the ID of source book, PEPCode and Volume (or assigned
          Volume)
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          bookBaseDocumentID:
            summary: Example of a book base ID
            value: SE.004
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: A documentList Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        400:
          description: Invalid PEP Code
        404:
          description: Error - Information not found
  /Authors/Index/{authNamePartial}/:
    get:
      tags:
      - Authors
      summary: Return a list of authors
      description: Return a list of authors matching a partial (start-of) author name
        to support building an author index
      operationId: getAuthorInfo
      parameters:
      - name: authNamePartial
        in: path
        description: Leading letter(s) (prefix) to match against author last names
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: An authorIndex object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        400:
          description: Invalid PEP Code
  /Authors/Publications/{authNamePartial}/:
    get:
      tags:
      - Authors
      summary: Return a list of documents published by the matching author names
      description: Return a list of documents published by authors matching the author
        name prefix supplied
      operationId: getAuthorPublications
      parameters:
      - name: authNamePartial
        in: path
        description: Leading letter(s) (prefix) to match against author last names
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: An authorPublist Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        400:
          description: Invalid PEP Code
  /Documents/Abstracts/{documentID}/:
    get:
      tags:
      - Documents
      - Abstracts
      summary: Return the abstract of the document
      description: Returns the abstract of the document matching documentID
      operationId: getDocumentAbstract
      parameters:
      - name: documentID
        in: path
        description: PEP Locator (ID) of document (article) to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          bookBaseDocumentID:
            summary: Example of a PEP Document ID, PEPCode+Vol+PageStart+AlphaVariant,
              PEPCode=PSAR, Vol=96, PageStart=1007, first article on page=A
            value: PSAR.096.1007A
      responses:
        200:
          description: A sourceInfo object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sourceInfo'
        400:
          description: Invalid status value
  /Documents/{documentID}/:
    get:
      tags:
      - Documents
      summary: Return Document information or the document itself
      description: Return Document information (summary, non-authenticated) or the
        document itself (authenticated)
      operationId: getDocument
      parameters:
      - name: documentID
        in: path
        description: PEP Locator (ID) of document (article) to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          bookBaseDocumentID:
            summary: Example of a PEP Document ID, PEPCode+Vol+PageStart+AlphaVariant,
              PEPCode=PSAR, Vol=96, PageStart=1007, first article on page=A
            value: PSAR.096.1007A
      responses:
        200:
          description: A document object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        400:
          description: Invalid status value
      security:
      - basicAuth: []
  /Documents/Downloads/PDF/{documentID}/:
    get:
      tags:
      - Documents
      summary: Initiates download of the document in PDF format
      description: Initiates download of the document in PDF format (if authenticated)
      operationId: getDocumentPDF
      parameters:
      - name: documentID
        in: path
        description: PEP Locator (ID) of document (article) to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          bookBaseDocumentID:
            summary: Example of a PEP Document ID, PEPCode+Vol+PageStart+AlphaVariant,
              PEPCode=PSAR, Vol=96, PageStart=1007, first article on page=A
            value: PSAR.096.1007A
      responses:
        200:
          description: A PDF file
          content:
            application/zip:
              schema:
                type: string
                format: binary
        400:
          description: Access denied
      security:
      - basicAuth: []
  /Documents/Downloads/EPUB/{documentID}/:
    get:
      tags:
      - Documents
      summary: Initiates download of the document in EPUB format
      description: Initiates download of the document in EPUB format (if authenticated)
      operationId: getDocumentEPUB
      parameters:
      - name: documentID
        in: path
        description: PEP Locator (ID) of document (article) to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          bookBaseDocumentID:
            summary: Example of a PEP Document ID, PEPCode+Vol+PageStart+AlphaVariant,
              PEPCode=PSAR, Vol=96, PageStart=1007, first article on page=A
            value: PSAR.096.1007A
      responses:
        200:
          description: A EPub File
          content:
            application/zip:
              schema:
                type: string
                format: binary
        400:
          description: Access denied
      security:
      - basicAuth: []
  /Documents/Downloads/Images/{imageID}:
    get:
      tags:
      - Database
      summary: Return a list of most cited documents
      description: Return a list of most cited documents (cited by PEP sources) within
        the past 5 years
      operationId: getDatabaseMostCited
      parameters:
      - name: imageID
        in: path
        description: PEP Locator for the image, e.g., ZBK.160.0001a.fig001.jpg
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: Return of image requested
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/tif:
              schema:
                type: string
                format: binary
        400:
          description: Bad request
      security:
      - basicAuth: []
  /Database/SearchAnalysis/{searchTerms}/:
    get:
      tags:
      - Database
      summary: Return term and term count info for searchTerms
      description: Return term and termcount info for searchTerms
      operationId: getDatabaseSearchAnalysisTerm
      parameters:
      - name: searchTerms
        in: path
        description: Search terms to analyze
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          searchTerms:
            summary: Search terms
            value: mother love feelings
      responses:
        200:
          description: A documentList object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/documentList'
        400:
          description: Invalid status value
  /Database/Search/:
    get:
      tags:
      - Database
      summary: Return a list of documents resulting from the search
      description: Return a list of documents resulting from the search
      operationId: getDatabaseSearch
      parameters:
      - name: author
        in: query
        description: Author name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: one or more words from title or phrase, with optional wildcards
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: journal
        in: query
        description: one or more PEPCodes (source) codes separated by +
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: language
        in: query
        description: Two letter ISO 639-1 code to match document language
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Document type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - abstract
          - article
          - announcement
          - commentary
          - errata
          - profile
          - report
          - review
      - name: zone1
        in: query
        description: Document Area to find the terms in fulltext1
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - article
          - para
          - quote
          - dream
          - dialog
          - reference
      - name: fulltext1
        in: query
        description: One or more search terms or a phrase with optional wildcards
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fulltext2
        in: query
        description: One or more search terms or a phrase with optional wildcards
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: connector
        in: query
        description: boolean connector for fulltext1 and fulltext2
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - and
          - or
          - not
      - name: zone2
        in: query
        description: Document Area to find the terms in fulltext2
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - article
          - para
          - quote
          - dream
          - dialog
          - reference
      - name: citecount
        in: query
        description: Minimum Number of times document has been cited in other PEP
          documents
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: viewcount
        in: query
        description: Minimum Number of times document has been viewed within specified
          viewperiod
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: viewperiod
        in: query
        description: Period of time, context to assess viewcount
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - week
          - month
          - six+months
          - year
      - name: datetype
        in: query
        description: Search range modifier (date) for startyear and endyear
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - since
          - anytime
          - on
          - before
          - between
      - name: startyear
        in: query
        description: Earliest year of publication for matching documents
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: endyear
        in: query
        description: Latest year of publication for matching documents
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Limits the number of return items
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: offset
        in: query
        description: Used to specify a nonzero start position for the return set in
          a list of return items, in conjunction with limit, it allows paging through
          a large set of return items with a subset returned each time number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        200:
          description: A documentList object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/documentList'
        400:
          description: Invalid status value
  /Database/SearchAnalysis/:
    get:
      tags:
      - Database
      summary: Return term and term count info for search in parameter list
      description: Return term and termcount info search in parameter list
      operationId: getDatabaseSearchAnalysis
      parameters:
      - name: author
        in: query
        description: Author name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: one or more words from title or phrase, with optional wildcards
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: journal
        in: query
        description: one or more PEPCodes (source) codes separated by +
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: language
        in: query
        description: Two letter ISO 639-1 code to match document language
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Document type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - abstract
          - article
          - announcement
          - commentary
          - errata
          - profile
          - report
          - review
      - name: zone1
        in: query
        description: Document Area to find the terms in fulltext1
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - article
          - para
          - quote
          - dream
          - dialog
          - reference
      - name: fulltext1
        in: query
        description: One or more search terms or a phrase with optional wildcards
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fulltext2
        in: query
        description: One or more search terms or a phrase with optional wildcards
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: connector
        in: query
        description: boolean connector for fulltext1 and fulltext2
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - and
          - or
          - not
      - name: zone2
        in: query
        description: Document Area to find the terms in fulltext2
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - article
          - para
          - quote
          - dream
          - dialog
          - reference
      - name: citecount
        in: query
        description: Minimum Number of times document has been cited in other PEP
          documents
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: viewcount
        in: query
        description: Minimum Number of times document has been viewed within specified
          viewperiod
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: viewperiod
        in: query
        description: Period of time, context to assess viewcount
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - week
          - month
          - six+months
          - year
      - name: datetype
        in: query
        description: Search range modifier (date) for startyear and endyear
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - since
          - anytime
          - on
          - before
          - between
      - name: startyear
        in: query
        description: Earliest year of publication for matching documents
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: endyear
        in: query
        description: Latest year of publication for matching documents
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: A documentList object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/documentList'
        400:
          description: Invalid status value
components:
  schemas:
    documents:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/respInfo'
        responseSet:
          type: array
          items:
            $ref: '#/components/schemas/respSetDocument'
    imageURL:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/respInfo'
        responseSet:
          type: array
          items:
            $ref: '#/components/schemas/respSetImageItem'
    volumeList:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/respInfo'
        responseSet:
          type: array
          items:
            $ref: '#/components/schemas/respSetVolListItem'
    documentList:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/respInfo'
        responseSet:
          type: array
          items:
            $ref: '#/components/schemas/respSetDocListItem'
    sourceInfo:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/respInfo'
        responseSet:
          type: array
          items:
            $ref: '#/components/schemas/respSetItem'
    authorIndex:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/respInfo'
        responseSet:
          type: array
          items:
            $ref: '#/components/schemas/respSetAuthIndexItem'
    authorPubList:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/respInfo'
        responseSet:
          type: array
          items:
            $ref: '#/components/schemas/respSetAuthPubListItem'
    respInfo:
      type: object
      properties:
        count:
          type: integer
          format: int32
        fullCount:
          type: integer
          format: int32
        fullCountComplete:
          type: boolean
        listLabel:
          type: string
        listType:
          type: string
        scopeQuery:
          type: string
        request:
          type: string
        timeStamp:
          type: string
    respSetDocument:
      type: object
      properties:
        documentID:
          type: string
        documentRef:
          type: string
        document:
          type: string
          format: html
        accessLimited:
          type: boolean
    respSetItem:
      type: object
      properties:
        ISSN:
          type: string
        PEPCode:
          type: string
        abbrev:
          type: string
        bannerURL:
          type: string
        language:
          type: string
        yearFirst:
          type: string
        yearLast:
          type: string
    respSetImageItem:
      type: object
      properties:
        PEPCode:
          type: string
        imageURL:
          type: string
        sourceType:
          type: string
        title:
          type: string
    respSetVolListItem:
      type: object
      properties:
        PEPCode:
          type: string
        vol:
          type: string
        year:
          type: string
    respSetAuthIndexItem:
      type: object
      properties:
        authorID:
          type: string
        publicationsURL:
          type: string
    respSetAuthPubListItem:
      type: object
      properties:
        authorID:
          type: string
        documentID:
          type: string
        documentRef:
          type: string
        documentURL:
          type: string
    respSetDocListItem:
      type: object
      properties:
        PEPCode:
          type: string
        authMast:
          type: string
        documentID:
          type: string
        documentRef:
          type: string
        issue:
          type: string
        issueTitle:
          type: string
        newSectionName:
          type: string
        pgStart:
          type: string
        pgEnd:
          type: string
        title:
          type: string
        vol:
          type: string
        year:
          type: string
        term:
          type: string
        termCount:
          type: string
    inline_response_200:
      type: object
      properties:
        imageURL:
          $ref: '#/components/schemas/imageURL'
    inline_response_200_1:
      type: object
      properties:
        volumeList:
          $ref: '#/components/schemas/volumeList'
    inline_response_200_2:
      type: object
      properties:
        documentList:
          $ref: '#/components/schemas/documentList'
    inline_response_200_3:
      type: object
      properties:
        authorindex:
          $ref: '#/components/schemas/authorIndex'
    inline_response_200_4:
      type: object
      properties:
        authorPubList:
          $ref: '#/components/schemas/authorPubList'
    inline_response_200_5:
      type: object
      properties:
        documents:
          $ref: '#/components/schemas/documents'
  parameters:
    paramLimit:
      name: limit
      in: query
      description: Limits the number of return items
      required: false
      style: form
      explode: true
      schema:
        type: integer
    paramOffset:
      name: offset
      in: query
      description: Used to specify a nonzero start position for the return set in
        a list of return items, in conjunction with limit, it allows paging through
        a large set of return items with a subset returned each time number
      required: false
      style: form
      explode: true
      schema:
        type: integer
    paramSourceType:
      name: sourceType
      in: path
      description: Type of Source
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - Journals
        - Books
        - Videos
        - Specials
    paramPEPCode:
      name: pepCode
      in: path
      description: PEP code / acronym of source
      required: true
      style: simple
      explode: false
      schema:
        type: string
      examples:
        pepCode:
          summary: Example of a pepCode
          value: APA
    paramPEPVol:
      name: pepVol
      in: path
      description: Vol Num. of source to return
      required: true
      style: simple
      explode: false
      schema:
        type: string
    paramAuthNamePartial:
      name: authNamePartial
      in: path
      description: Leading letter(s) (prefix) to match against author last names
      required: true
      style: simple
      explode: false
      schema:
        type: string
    paramDocumentID:
      name: documentID
      in: path
      description: PEP Locator (ID) of document (article) to return
      required: true
      style: simple
      explode: false
      schema:
        type: string
      examples:
        bookBaseDocumentID:
          summary: Example of a PEP Document ID, PEPCode+Vol+PageStart+AlphaVariant,
            PEPCode=PSAR, Vol=96, PageStart=1007, first article on page=A
          value: PSAR.096.1007A
    paramZone1:
      name: zone1
      in: query
      description: Document Area to find the terms in fulltext1
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - article
        - para
        - quote
        - dream
        - dialog
        - reference
    paramFullText1:
      name: fulltext1
      in: query
      description: One or more search terms or a phrase with optional wildcards
      required: false
      style: form
      explode: true
      schema:
        type: string
    paramConnector:
      name: connector
      in: query
      description: boolean connector for fulltext1 and fulltext2
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - and
        - or
        - not
    paramFullText2:
      name: fulltext2
      in: query
      description: One or more search terms or a phrase with optional wildcards
      required: false
      style: form
      explode: true
      schema:
        type: string
    paramZone2:
      name: zone2
      in: query
      description: Document Area to find the terms in fulltext2
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - article
        - para
        - quote
        - dream
        - dialog
        - reference
    paramAuthor:
      name: author
      in: query
      description: Author name
      required: false
      style: form
      explode: true
      schema:
        type: string
    paramTitle:
      name: title
      in: query
      description: one or more words from title or phrase, with optional wildcards
      required: false
      style: form
      explode: true
      schema:
        type: string
    paramJournal:
      name: journal
      in: query
      description: one or more PEPCodes (source) codes separated by +
      required: false
      style: form
      explode: true
      schema:
        type: string
    paramLanguage:
      name: language
      in: query
      description: Two letter ISO 639-1 code to match document language
      required: false
      style: form
      explode: true
      schema:
        type: string
    paramType:
      name: type
      in: query
      description: Document type
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - abstract
        - article
        - announcement
        - commentary
        - errata
        - profile
        - report
        - review
    paramCiteCount:
      name: citecount
      in: query
      description: Minimum Number of times document has been cited in other PEP documents
      required: false
      style: form
      explode: true
      schema:
        type: integer
    paramViewCount:
      name: viewcount
      in: query
      description: Minimum Number of times document has been viewed within specified
        viewperiod
      required: false
      style: form
      explode: true
      schema:
        type: integer
    paramViewPeriod:
      name: viewperiod
      in: query
      description: Period of time, context to assess viewcount
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - week
        - month
        - six+months
        - year
    paramDateType:
      name: datetype
      in: query
      description: Search range modifier (date) for startyear and endyear
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - since
        - anytime
        - on
        - before
        - between
    paramEndYear:
      name: endyear
      in: query
      description: Latest year of publication for matching documents
      required: false
      style: form
      explode: true
      schema:
        type: string
    paramStartYear:
      name: startyear
      in: query
      description: Earliest year of publication for matching documents
      required: false
      style: form
      explode: true
      schema:
        type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    api_key:
      type: apiKey
      name: api_key
      in: header
