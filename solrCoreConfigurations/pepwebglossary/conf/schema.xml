<?xml version="1.0" encoding="UTF-8" ?>
<!--
    PEP Author Database Schema v.01
    for core PEPWebAuthors
-->
<!-- Schema name just for labeling, the managed-schema file name is what Solr looks for -->
<schema name="pepwebauthors" version="1.61">

  <!-- This is the schema for a database of authors extracted from PEP-Web articles (all types) -->
  <!-- This will give us new types of searches against the database -->

  <!-- the ID will be unique for each AuthorArticle combination; the authorID + the articleID  -->
  <uniqueKey>term_id</uniqueKey>
  <!-- ********************************* -->
  <!-- commonly used field names -->
  <!-- Redundant with names following patterns, but it's nice to have Fields
       which exist in all the dbs -->
  <!-- ********************************* -->
  <!-- Metadata fields -->
  <!-- containing file info -->
  <!-- <field name="fileAbsolutePath" type="string" indexed="true" stored="true"/> -->
  <field name="file_size" type="pint" indexed="true" stored="true"/>
  <!-- Store whether its PEPArchive, PEPCurrent, etc. -->
  <field name="file_classification" type="string" indexed="true" stored="true"/>
  <field name="file_last_modified" type="pdate" indexed="true" stored="true"/>
  <field name="file_name" type="string" indexed="true" stored="true"/>

  <field name="timestamp" type="pdate" indexed="true" stored="true" multiValued="false"/>

  <!-- Reference ID = PEP article ID + biblio entry ID -->
  <field name="id" type="string" indexed="true" stored="true"/>
  <!-- this will be the biblio reference document authors -->
  <field name="title" type="text_simple" indexed="true" stored="true" multiValued="true"/>
  <!-- this is probably not of interest, but leave for now-->
  <field name="format" type="string" indexed="true" stored="true"/>
  <!-- version is required to do atomic updates, though I still can't get them to work. -->
  <field name="_version_" type="plong" indexed="false" stored="false"/>
  <!-- field "text" full-text of the citation for the article-->
  <field name="text" type="text_simple" indexed="true" stored="true" multiValued="false"/>

  <!-- ********************************* -->
  <!-- Containing Article metadata -->
  <!-- Article Level prefix art_ -->
  <!-- ********************************* -->
  <!--Term_id will unique, defined by group_id + . + sequence_number-->
  <field name="term_id" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <!--Group id will be the current ID we use to link -->
  <field name="group_id" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="term" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <field name="term_type" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <field name="term_source" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <field name="term_also" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <field name="term_def_xml" type="text_simple" indexed="true" stored="true" multiValued="false"/>
  <field name="term_def_rest_xml" type="text_simple" indexed="true" stored="true" multiValued="false"/>
  <!--the PEP source document ID-->
  <field name="art_id" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <!--term only text just the text under the term (or group if there are no sub terms-->
  <field name="group_name" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <field name="group_also" type="string" indexed="true" stored="true" multiValued="false" docValues="true"/>
  <field name="group_term_count" type="pint" indexed="true" stored="true" multiValued="false" docValues="true"/>

  <!-- Uncomment the dynamicField definition to catch any other fields
   that may have been declared in the DIH configuration.
   This allows to speed up prototyping.
  -->
  <!-- <dynamicField name="*" type="string" indexed="true" stored="true" multiValued="true"/> -->

  <!-- The StrField type is not analyzed, but is indexed/stored verbatim. -->
  <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>

  <!-- A basic text field that has reasonable, generic
   cross-language defaults: it tokenizes with StandardTokenizer,
   and down cases. It does not deal with stopwords or other issues.
   See other examples for alternative definitions.
  -->
  <fieldType name="text_simple" class="solr.TextField" positionIncrementGap="100">
    <analyzer>
      <!-- nrs added HTMLStripCharFilterFactory -->
      <charFilter class="solr.HTMLStripCharFilterFactory"/>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

  <!-- A general text field that has reasonable, generic
       cross-language defaults: it tokenizes with StandardTokenizer,
       removes stop words from case-insensitive "stopwords.txt"
       (empty by default), and down cases.  At query time only, it
       also applies synonyms.
  -->
  <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100" multiValued="true">
    <analyzer type="index">
      <!-- nrs added HTMLStripCharFilterFactory -->
      <charFilter class="solr.HTMLStripCharFilterFactory"/>
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
      <!-- in this example, we will only use synonyms at query time
      <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
      <filter class="solr.FlattenGraphFilterFactory"/>
      -->
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.StandardTokenizerFactory"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
      <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      <filter class="solr.LowerCaseFilterFactory"/>
    </analyzer>
  </fieldType>

  <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
  <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
  <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
  <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>

  <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
  <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
  <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
  <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
  <fieldType name="random" class="solr.RandomSortField" indexed="true"/>

  <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
       is a more restricted form of the canonical representation of dateTime
       http://www.w3.org/TR/xmlschema-2/#dateTime
       The trailing "Z" designates UTC time and is mandatory.
       Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
       All other components are mandatory.

       Expressions can also be used to denote calculations that should be
       performed relative to "NOW" to determine the value, ie...

             NOW/HOUR
                ... Round to the start of the current hour
             NOW-1DAY
                ... Exactly 1 day prior to now
             NOW/DAY+6MONTHS+3DAYS
                ... 6 months and 3 days in the future from the start of
                    the current day

    -->
  <!-- KD-tree versions of date fields -->
  <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
  <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>

  <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
  <fieldType name="binary" class="solr.BinaryField"/>


  <!-- since fields of this type are by default not stored or indexed,
     any data added to them will be ignored outright.  -->
  <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />


</schema>
